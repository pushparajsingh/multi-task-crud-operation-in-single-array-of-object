{"ast":null,"code":"const initialState = {\n  data: [{\n    id: 1,\n    name: \"project 1\"\n  }, {\n    id: 2,\n    name: \"project 2\"\n  }]\n};\n\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console;\n\n  switch (action.type) {\n    case \"NEW_A_CONTENT\":\n      {\n        let count = state.data.length;\n        count++;\n        let newData = state.data.concat({\n          id: count,\n          name: action.payload\n        });\n        return {\n          data: newData\n        };\n      }\n\n    case \"DEL_A_CONTENT\":\n      {\n        let del = state.data.filter(item => item.id != action.payload);\n        console.log(del[0]);\n        return {\n          data: del\n        };\n      }\n\n    case \"CHA_A_CONTENT\":\n      {\n        const changed = state.data.map(item => {\n          if (item.id == action.id) {\n            return {\n              id: action.id,\n              name: action.payload\n            };\n          } else {\n            return item;\n          }\n        });\n        return { ...state,\n          data: changed\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"names":["initialState","data","id","name","rootReducer","state","action","console","type","count","length","newData","concat","payload","del","filter","item","log","changed","map"],"sources":["/home/pushparajsigh/Desktop/practice/myapp/src/redux/reducer/reducer.js"],"sourcesContent":["const initialState = {\n  data: [\n    { id: 1, name: \"project 1\" },\n    { id: 2, name: \"project 2\" },\n  ],\n};\n\nfunction rootReducer(state = initialState, action) {\n  console\n  switch (action.type) {\n    case \"NEW_A_CONTENT\": {\n      let count = state.data.length;\n      count++;\n      let newData = state.data.concat({ id: count, name: action.payload });\n\n      return {\n        data: newData,\n      };\n    }\n    case \"DEL_A_CONTENT\": {\n      let del = state.data.filter((item) => item.id != action.payload);\n      console.log(del[0]);\n      return {\n        data: del\n      };\n    }\n    case \"CHA_A_CONTENT\": {\n      const changed = state.data.map((item) => {\n        if (item.id == action.id) {\n          return { id: action.id, name: action.payload };\n        } else {\n          return item;\n        }\n      });\n      return {\n        ...state,\n        data: changed,\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,CACJ;IAAEC,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CADI,EAEJ;IAAED,EAAE,EAAE,CAAN;IAASC,IAAI,EAAE;EAAf,CAFI;AADa,CAArB;;AAOA,SAASC,WAAT,GAAmD;EAAA,IAA9BC,KAA8B,uEAAtBL,YAAsB;EAAA,IAARM,MAAQ;EACjDC,OAAO;;EACP,QAAQD,MAAM,CAACE,IAAf;IACE,KAAK,eAAL;MAAsB;QACpB,IAAIC,KAAK,GAAGJ,KAAK,CAACJ,IAAN,CAAWS,MAAvB;QACAD,KAAK;QACL,IAAIE,OAAO,GAAGN,KAAK,CAACJ,IAAN,CAAWW,MAAX,CAAkB;UAAEV,EAAE,EAAEO,KAAN;UAAaN,IAAI,EAAEG,MAAM,CAACO;QAA1B,CAAlB,CAAd;QAEA,OAAO;UACLZ,IAAI,EAAEU;QADD,CAAP;MAGD;;IACD,KAAK,eAAL;MAAsB;QACpB,IAAIG,GAAG,GAAGT,KAAK,CAACJ,IAAN,CAAWc,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACd,EAAL,IAAWI,MAAM,CAACO,OAA9C,CAAV;QACAN,OAAO,CAACU,GAAR,CAAYH,GAAG,CAAC,CAAD,CAAf;QACA,OAAO;UACLb,IAAI,EAAEa;QADD,CAAP;MAGD;;IACD,KAAK,eAAL;MAAsB;QACpB,MAAMI,OAAO,GAAGb,KAAK,CAACJ,IAAN,CAAWkB,GAAX,CAAgBH,IAAD,IAAU;UACvC,IAAIA,IAAI,CAACd,EAAL,IAAWI,MAAM,CAACJ,EAAtB,EAA0B;YACxB,OAAO;cAAEA,EAAE,EAAEI,MAAM,CAACJ,EAAb;cAAiBC,IAAI,EAAEG,MAAM,CAACO;YAA9B,CAAP;UACD,CAFD,MAEO;YACL,OAAOG,IAAP;UACD;QACF,CANe,CAAhB;QAOA,OAAO,EACL,GAAGX,KADE;UAELJ,IAAI,EAAEiB;QAFD,CAAP;MAID;;IACD;MACE,OAAOb,KAAP;EA/BJ;AAiCD;;AAED,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}